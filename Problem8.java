package com.aniket;

public class Problem8 {

	public static void main(String[] args) {
		String str = "7316717653133062491922511967442657474235534919493496983520312"
				+ "774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069"
				+ "87471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423"
				+ "3803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427"
				+ "121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167"
				+ "0556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605"
				+ "7490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086"
				+ "346567481391912316282458617866458359124566529476545682848912883142607690042242190226710556263211111093705442175"
				+ "06941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071"
				+ "7606058861164671094050775410022569831552000559357297257163626956188267042825248360"
				+ "0823257530420752963450";
		System.out.println(str.length());
		char[] charArray = str.toCharArray();
		Long max = 1l;
		for (int i = 0; i < str.length(); i++) {
			try {
				String subSet = str.substring(i, i + 13);
				char[] charArr = subSet.toCharArray();
				long res = 1;
				for (int j = 0; j < charArr.length; j++) {
					res = res * Long.parseLong(Character.toString(charArr[j]));
				}
				if (max < res) {
					System.out.println(res + " - " + subSet);
					max = res;
				}

			} catch (Exception e) {

			}

		}
		// System.out.println("" + str.substring(0, 4));
		// for (int i = 0; i < charArray.length; i++) {
		// System.out.println(charArray[i]);
		// }

	}

}
